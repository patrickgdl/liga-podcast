{"version":3,"sources":["node_modules/@scullyio/ng-lib/__ivy_ngcc__/fesm2015/scullyio-ng-lib.js","node_modules/tslib/tslib.es6.js","src/app/shared/episode-summary.component.ts","src/app/shared/episode-summary.component.html","src/app/shared/episodes.ts","src/app/shared/player.component.ts","src/app/shared/player.component.html","src/app/shared/shared.module.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Input, NgModule, Inject } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport { NavigationEnd, Router, NavigationStart } from '@angular/router';\nimport { BehaviorSubject, ReplaySubject, of, Observable, EMPTY, forkJoin } from 'rxjs';\nimport { pluck, filter, tap, take, switchMap, catchError, shareReplay, map, first } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/idleMonitor/idle-monitor.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/router';\n\nconst _c0 = [\"*\"];\nfunction LocalState() { }\nif (false) {\n    /** @type {?} */\n    LocalState.prototype.idle;\n    /** @type {?} */\n    LocalState.prototype.timeOut;\n}\nclass IdleMonitorService {\n    /**\n     * @param {?} zone\n     * @param {?} router\n     */\n    constructor(zone, router) {\n        this.zone = zone;\n        this.router = router;\n        this.imState = new BehaviorSubject({\n            idle: false,\n            timeOut: 5 * 1000,\n        });\n        this.idle$ = this.imState.pipe(pluck('idle'));\n        this.initApp = new Event('AngularInitialized', { bubbles: true, cancelable: false });\n        this.appReady = new Event('AngularReady', { bubbles: true, cancelable: false });\n        this.appTimeout = new Event('AngularTimeout', { bubbles: true, cancelable: false });\n        if (window) {\n            window.dispatchEvent(this.initApp);\n            this.router.events\n                .pipe(filter((/**\n             * @param {?} ev\n             * @return {?}\n             */\n            ev => ev instanceof NavigationEnd && ev.urlAfterRedirects !== undefined)), tap((/**\n             * @return {?}\n             */\n            () => this.zoneIdleCheck())))\n                .subscribe();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.idle$.pipe(take(1)).toPromise();\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    zoneIdleCheck() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (Zone === undefined) {\n                return this.simpleTimeout();\n            }\n            /** @type {?} */\n            const taskTrackingZone = Zone.current.get('TaskTrackingZone');\n            if (taskTrackingZone === undefined) {\n                return this.simpleTimeout();\n            }\n            if (this.imState.value.idle) {\n                yield this.setState('idle', false);\n            }\n            /** run the actual check for 'idle' outsides zone, otherwise it will never come to an end. */\n            this.zone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                /** @type {?} */\n                let tCancel;\n                /** @type {?} */\n                let count = 0;\n                /** @type {?} */\n                const startTime = Date.now();\n                /** @type {?} */\n                const monitor = (/**\n                 * @return {?}\n                 */\n                () => {\n                    clearTimeout(tCancel);\n                    // console.table(taskTrackingZone.macroTasks);\n                    if (Date.now() - startTime > 30 * 1000) {\n                        /** bail out after 30 seconds. */\n                        window.dispatchEvent(this.appTimeout);\n                        return;\n                    }\n                    if ((taskTrackingZone.macroTasks.length > 0 &&\n                        taskTrackingZone.macroTasks.find((/**\n                         * @param {?} z\n                         * @return {?}\n                         */\n                        (z) => z.source.includes('XMLHttpRequest'))) !== undefined) ||\n                        count < 1 // make sure it runs at least once!\n                    ) {\n                        tCancel = setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            count += 1;\n                            monitor();\n                        }), 50);\n                        return;\n                    }\n                    window.dispatchEvent(this.appReady);\n                    this.setState('idle', true);\n                });\n                monitor();\n            }));\n        });\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    simpleTimeout() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** zone not available, use a timeout instead. */\n            console.warn('Scully is using timeouts, add the needed polyfills instead!');\n            yield new Promise((/**\n             * @param {?} r\n             * @return {?}\n             */\n            r => setTimeout(r, this.imState.value.timeOut)));\n            window.dispatchEvent(this.appReady);\n        });\n    }\n    /**\n     * @param {?} milliseconds\n     * @return {?}\n     */\n    setPupeteerTimoutValue(milliseconds) {\n        this.imState.next(Object.assign(Object.assign({}, this.imState.value), { timeOut: milliseconds }));\n    }\n    /**\n     * @private\n     * @param {?} key\n     * @param {?} value\n     * @return {?}\n     */\n    setState(key, value) {\n        this.imState.next(Object.assign(Object.assign({}, this.imState.value), { [key]: value }));\n    }\n}\nIdleMonitorService.ɵfac = function IdleMonitorService_Factory(t) { return new (t || IdleMonitorService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\n/** @nocollapse */\nIdleMonitorService.ctorParameters = () => [\n    { type: NgZone },\n    { type: Router }\n];\n/** @nocollapse */ IdleMonitorService.ɵprov = ɵɵdefineInjectable({ factory: function IdleMonitorService_Factory() { return new IdleMonitorService(ɵɵinject(NgZone), ɵɵinject(Router)); }, token: IdleMonitorService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(IdleMonitorService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.imState;\n    /** @type {?} */\n    IdleMonitorService.prototype.idle$;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.initApp;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.appReady;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.appTimeout;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.zone;\n    /**\n     * @type {?}\n     * @private\n     */\n    IdleMonitorService.prototype.router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/fetchHttp.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @template T\n * @param {?} url\n * @param {?=} responseType\n * @return {?}\n */\nfunction fetchHttp(url, responseType = 'json') {\n    return new Promise((/**\n     * @param {?} resolve\n     * @param {?} reject\n     * @return {?}\n     */\n    (resolve, reject) => {\n        /** @type {?} */\n        const xhr = new XMLHttpRequest();\n        xhr.responseType = responseType;\n        xhr.addEventListener('load', (/**\n         * @param {?} ev\n         * @return {?}\n         */\n        ev => resolve(xhr.response)));\n        xhr.addEventListener('error', (/**\n         * @param {...?} err\n         * @return {?}\n         */\n        (...err) => reject(err)));\n        xhr.open('get', url, true);\n        xhr.send();\n    }));\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/route-service/scully-routes.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @record\n */\nfunction ScullyRoute() { }\nif (false) {\n    /** @type {?} */\n    ScullyRoute.prototype.route;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.title;\n    /** @type {?|undefined} */\n    ScullyRoute.prototype.slugs;\n    /* Skipping unhandled member: [prop: string]: any;*/\n}\nclass ScullyRoutesService {\n    constructor() {\n        this.refresh = new ReplaySubject(1);\n        this.available$ = this.refresh.pipe(switchMap((/**\n         * @return {?}\n         */\n        () => fetchHttp('/assets/scully-routes.json'))), catchError((/**\n         * @return {?}\n         */\n        () => {\n            console.warn('Scully routes file not found, are you running the in static version of your site?');\n            return of((/** @type {?} */ ([])));\n        })), shareReplay({ refCount: false, bufferSize: 1 }));\n        this.topLevel$ = this.available$.pipe(map((/**\n         * @param {?} routes\n         * @return {?}\n         */\n        routes => routes.filter((/**\n         * @param {?} r\n         * @return {?}\n         */\n        (r) => !r.route.slice(1).includes('/'))))), shareReplay({ refCount: false, bufferSize: 1 }));\n        /** kick off first cycle */\n        this.reload();\n    }\n    /**\n     * @return {?}\n     */\n    getCurrent() {\n        if (!location) {\n            /** probably not in a browser, no current location available */\n            return of();\n        }\n        /** @type {?} */\n        const curLocation = location.pathname;\n        return this.available$.pipe(map((/**\n         * @param {?} list\n         * @return {?}\n         */\n        list => list.find((/**\n         * @param {?} r\n         * @return {?}\n         */\n        r => curLocation.includes(r.route) ||\n            (r.slugs &&\n                Array.isArray(r.slugs) &&\n                r.slugs.find((/**\n                 * @param {?} slug\n                 * @return {?}\n                 */\n                slug => curLocation.includes(slug))) !== undefined))))));\n    }\n    /**\n     * @return {?}\n     */\n    reload() {\n        this.refresh.next();\n    }\n}\nScullyRoutesService.ɵfac = function ScullyRoutesService_Factory(t) { return new (t || ScullyRoutesService)(); };\n/** @nocollapse */\nScullyRoutesService.ctorParameters = () => [];\n/** @nocollapse */ ScullyRoutesService.ɵprov = ɵɵdefineInjectable({ factory: function ScullyRoutesService_Factory() { return new ScullyRoutesService(); }, token: ScullyRoutesService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScullyRoutesService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyRoutesService.prototype.refresh;\n    /** @type {?} */\n    ScullyRoutesService.prototype.available$;\n    /** @type {?} */\n    ScullyRoutesService.prototype.topLevel$;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/scully-content/scully-content.component.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * this is needed, because otherwise the CLI borks while building\n * @type {?}\n */\nconst scullyBegin = '<!--scullyContent-begin-->';\n/** @type {?} */\nconst scullyEnd = '<!--scullyContent-end-->';\nclass ScullyContentComponent {\n    /**\n     * @param {?} elmRef\n     * @param {?} srs\n     * @param {?} router\n     * @param {?} idle\n     */\n    constructor(elmRef, srs, router, idle) {\n        this.elmRef = elmRef;\n        this.srs = srs;\n        this.router = router;\n        this.idle = idle;\n        this.type = 'MD';\n        this.elm = (/** @type {?} */ (this.elmRef.nativeElement));\n        this.routes = this.srs.available$.pipe(take(1)).toPromise();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** make sure the idle-check is loaded. */\n        this.idle.init();\n        if (this.elm) {\n            this.handlePage();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    handlePage() {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const template = document.createElement('template');\n            // tslint:disable-next-line: no-string-literal\n            if (window['scullyContent']) {\n                /** upgrade existing static content */\n                // tslint:disable-next-line: no-string-literal\n                template.innerHTML = window['scullyContent'];\n            }\n            else {\n                /** @type {?} */\n                const curPage = location.href;\n                yield fetchHttp(curPage, 'text')\n                    .then((/**\n                 * @param {?} html\n                 * @return {?}\n                 */\n                (html) => {\n                    try {\n                        template.innerHTML = html.split(scullyBegin)[1].split(scullyEnd)[0];\n                    }\n                    catch (e) {\n                        template.innerHTML = `<h2>Sorry, could not parse static page content</h2>\n            <p>This might happen if you are not using the static generated pages.</p>`;\n                    }\n                }))\n                    .catch((/**\n                 * @param {?} e\n                 * @return {?}\n                 */\n                e => {\n                    template.innerHTML = '<h2>Sorry, could not load static page content</h2>';\n                    console.error('problem during loading static scully content', e);\n                }));\n            }\n            /** @type {?} */\n            const parent = this.elm.parentElement || document.body;\n            /** @type {?} */\n            const begin = document.createComment('scullyContent-begin');\n            /** @type {?} */\n            const end = document.createComment('scullyContent-end');\n            parent.insertBefore(begin, this.elm);\n            parent.insertBefore(template.content, this.elm);\n            parent.insertBefore(end, this.elm);\n            document.querySelectorAll('[href]').forEach(this.upgradeToRoutelink.bind(this));\n        });\n    }\n    /**\n     * @param {?} elm\n     * @return {?}\n     */\n    upgradeToRoutelink(elm) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /** @type {?} */\n            const routes = yield this.routes;\n            /** @type {?} */\n            const lnk = elm.getAttribute('href').toLowerCase();\n            /** @type {?} */\n            const route = routes.find((/**\n             * @param {?} r\n             * @return {?}\n             */\n            r => r.route.toLowerCase() === lnk));\n            if (lnk && route) {\n                elm.onclick = (/**\n                 * @param {?} ev\n                 * @return {?}\n                 */\n                (ev) => {\n                    /** @type {?} */\n                    const splitRoute = route.route.split(`/`);\n                    /** @type {?} */\n                    const curSplit = location.pathname.split('/');\n                    // loose last \"part\" of route\n                    curSplit.pop();\n                    ev.preventDefault();\n                    this.router.navigate(splitRoute).catch((/**\n                     * @param {?} e\n                     * @return {?}\n                     */\n                    e => console.error('routing error', e)));\n                    /** check for the same route with different \"data\", and NOT a level higher (length) */\n                    if (curSplit.every((/**\n                     * @param {?} part\n                     * @param {?} i\n                     * @return {?}\n                     */\n                    (part, i) => splitRoute[i] === part)) && splitRoute.length > curSplit.length) {\n                        setTimeout((/**\n                         * @return {?}\n                         */\n                        () => {\n                            /** @type {?} */\n                            const p = this.elm.parentElement;\n                            /** @type {?} */\n                            let cur = (/** @type {?} */ (findComments(p, 'scullyContent-begin')[0]));\n                            /** @type {?} */\n                            let next;\n                            do {\n                                next = cur.nextSibling;\n                                p.removeChild(cur);\n                                cur = next;\n                            } while (next && next !== this.elm);\n                            // tslint:disable-next-line: no-string-literal\n                            window['scullyContent'] = undefined;\n                            this.handlePage();\n                        }), 20);\n                    }\n                });\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this.mutationSubscription) {\n            this.mutationSubscription.unsubscribe();\n        }\n    }\n}\nScullyContentComponent.ɵfac = function ScullyContentComponent_Factory(t) { return new (t || ScullyContentComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScullyRoutesService), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Router), ɵngcc0.ɵɵdirectiveInject(IdleMonitorService)); };\nScullyContentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: ScullyContentComponent, selectors: [[\"scully-content\"]], inputs: { type: \"type\" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScullyContentComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"\\n      :host {\\n        display: none;\\n      }\\n      scully-content {\\n        display: none;\\n      }\\n    \"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nScullyContentComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScullyRoutesService },\n    { type: Router },\n    { type: IdleMonitorService }\n];\nScullyContentComponent.propDecorators = {\n    type: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScullyContentComponent, [{\n        type: Component,\n        args: [{\n                // tslint:disable-next-line: component-selector\n                selector: 'scully-content',\n                template: '<ng-content></ng-content>',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                preserveWhitespaces: true,\n                styles: [`\n      :host {\n        display: none;\n      }\n      scully-content {\n        display: none;\n      }\n    `]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScullyRoutesService }, { type: ɵngcc1.Router }, { type: IdleMonitorService }]; }, { type: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    ScullyContentComponent.prototype.type;\n    /** @type {?} */\n    ScullyContentComponent.prototype.elm;\n    /** @type {?} */\n    ScullyContentComponent.prototype.mutationSubscription;\n    /** @type {?} */\n    ScullyContentComponent.prototype.routes;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.elmRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.srs;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.router;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScullyContentComponent.prototype.idle;\n}\n/**\n * @param {?} elm\n * @param {?} config\n * @return {?}\n */\nfunction fromMutationObserver(elm, config) {\n    return new Observable((/**\n     * @param {?} obs\n     * @return {?}\n     */\n    obs => {\n        /** @type {?} */\n        const observer = new MutationObserver((/**\n         * @param {?} mutations\n         * @return {?}\n         */\n        mutations => mutations.forEach((/**\n         * @param {?} mutation\n         * @return {?}\n         */\n        mutation => obs.next(mutation)))));\n        observer.observe(elm, config);\n        return (/**\n         * @return {?}\n         */\n        () => observer.disconnect());\n    }));\n}\n/**\n * @param {?} rootElem\n * @param {?=} searchText\n * @return {?}\n */\nfunction findComments(rootElem, searchText) {\n    /** @type {?} */\n    const comments = [];\n    // Fourth argument, which is actually obsolete according to the DOM4 standard, seems required in IE 11\n    /** @type {?} */\n    const iterator = document.createNodeIterator(rootElem, NodeFilter.SHOW_COMMENT, {\n        acceptNode: (/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => {\n            // Logic to determine whether to accept, reject or skip node\n            // In this case, only accept nodes that have content\n            // other than whitespace\n            if (searchText && node.nodeValue && !node.nodeValue.includes(searchText)) {\n                return NodeFilter.FILTER_REJECT;\n            }\n            return NodeFilter.FILTER_ACCEPT;\n        }),\n    }\n    // , false // IE-11 support requires this parameter.\n    );\n    /** @type {?} */\n    let curNode;\n    // tslint:disable-next-line: no-conditional-assignment\n    while ((curNode = iterator.nextNode())) {\n        comments.push(curNode);\n    }\n    return comments;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/components.module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ComponentsModule {\n}\nComponentsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ComponentsModule });\nComponentsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ComponentsModule_Factory(t) { return new (t || ComponentsModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ComponentsModule, { declarations: [ScullyContentComponent], exports: [ScullyContentComponent] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ComponentsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [ScullyContentComponent],\n                exports: [ScullyContentComponent]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/utils/isScully.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// tslint:disable: no-string-literal\n/** @type {?} */\nconst isScullyRunning = (/**\n * @return {?}\n */\n() => window && window['ScullyIO'] === 'running');\n/** @type {?} */\nconst isScullyGenerated = (/**\n * @return {?}\n */\n() => window && window['ScullyIO'] === 'generated');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: lib/transfer-state/transfer-state.service.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst SCULLY_SCRIPT_ID = `scully-transfer-state`;\n/** @type {?} */\nconst SCULLY_STATE_START = `/** ___SCULLY_STATE_START___ */`;\n/** @type {?} */\nconst SCULLY_STATE_END = `/** ___SCULLY_STATE_END___ */`;\n/**\n * @record\n */\nfunction State() { }\n// Adding this dynamic comment to suppress ngc error around Document as a DI token.\n// https://github.com/angular/angular/issues/20351#issuecomment-344009887\n/**\n * \\@dynamic\n */\nclass TransferStateService {\n    /**\n     * @param {?} document\n     * @param {?} router\n     */\n    constructor(document, router) {\n        this.document = document;\n        this.router = router;\n        this.isNavigatingBS = new BehaviorSubject(false);\n        this.stateBS = new BehaviorSubject({});\n        this.state$ = this.isNavigatingBS.pipe(switchMap((/**\n         * @param {?} isNav\n         * @return {?}\n         */\n        isNav => (isNav ? EMPTY : this.stateBS.asObservable()))));\n        this.setupEnvForTransferState();\n        this.setupNavStartDataFetching();\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    setupEnvForTransferState() {\n        if (isScullyRunning()) {\n            // In Scully puppeteer\n            this.script = this.document.createElement('script');\n            this.script.setAttribute('id', SCULLY_SCRIPT_ID);\n            this.document.head.appendChild(this.script);\n        }\n        else if (isScullyGenerated()) {\n            // On the client AFTER scully rendered it\n            this.stateBS.next((window && window[SCULLY_SCRIPT_ID]) || {});\n        }\n    }\n    /**\n     * Getstate will return an observable that fires once and completes.\n     * It does so right after the navigation for the page has finished.\n     * @template T\n     * @param {?} name The name of the state to\n     * @return {?}\n     */\n    getState(name) {\n        return this.state$.pipe(pluck(name));\n    }\n    /**\n     * @template T\n     * @param {?} name\n     * @param {?} val\n     * @return {?}\n     */\n    setState(name, val) {\n        /** @type {?} */\n        const newState = Object.assign(Object.assign({}, this.stateBS.value), { [name]: val });\n        this.stateBS.next(newState);\n        if (isScullyRunning()) {\n            this.script.textContent = `window['${SCULLY_SCRIPT_ID}']=${SCULLY_STATE_START}${JSON.stringify(newState)}${SCULLY_STATE_END}`;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    setupNavStartDataFetching() {\n        /**\n         * Each time the route changes, get the Scully state from the server-rendered page\n         */\n        if (!isScullyGenerated()) {\n            return;\n        }\n        this.router.events\n            .pipe(filter((/**\n         * @param {?} e\n         * @return {?}\n         */\n        e => e instanceof NavigationStart)), switchMap((/**\n         * @param {?} e\n         * @return {?}\n         */\n        (e) => {\n            this.isNavigatingBS.next(true);\n            return forkJoin([\n                /** prevent emitting before navigation to _this_ URL is done. */\n                this.router.events.pipe(filter((/**\n                 * @param {?} ev\n                 * @return {?}\n                 */\n                ev => ev instanceof NavigationEnd && ev.url === e.url)), first()),\n                // Get the next route's page from the server\n                fetchHttp(e.url + '/index.html', 'text').catch((/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                err => {\n                    console.warn('Failed transfering state from route', err);\n                    return '';\n                })),\n            ]);\n        })), \n        /** parse out the relevant piece off text, and conver to json */\n        map((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([e, html]) => {\n            try {\n                /** @type {?} */\n                const newStateStr = html.split(SCULLY_STATE_START)[1].split(SCULLY_STATE_END)[0];\n                return JSON.parse(newStateStr);\n            }\n            catch (_a) {\n                return null;\n            }\n        })), \n        /** prevent progressing in case anything went sour above */\n        filter((/**\n         * @param {?} val\n         * @return {?}\n         */\n        val => val !== null)), \n        /** activate the new state */\n        tap((/**\n         * @param {?} newState\n         * @return {?}\n         */\n        newState => {\n            /** signal to send out update */\n            this.isNavigatingBS.next(false);\n            /** replace the state, so we don't leak memory on old state */\n            this.stateBS.next(newState);\n        })))\n            .subscribe();\n    }\n}\nTransferStateService.ɵfac = function TransferStateService_Factory(t) { return new (t || TransferStateService)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ɵngcc1.Router)); };\n/** @nocollapse */\nTransferStateService.ctorParameters = () => [\n    { type: Document, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: Router }\n];\n/** @nocollapse */ TransferStateService.ɵprov = ɵɵdefineInjectable({ factory: function TransferStateService_Factory() { return new TransferStateService(ɵɵinject(DOCUMENT), ɵɵinject(Router)); }, token: TransferStateService, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(TransferStateService, [{\n        type: Injectable,\n        args: [{\n                providedIn: 'root'\n            }]\n    }], function () { return [{ type: Document, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.Router }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.script;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.isNavigatingBS;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.stateBS;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.state$;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.document;\n    /**\n     * @type {?}\n     * @private\n     */\n    TransferStateService.prototype.router;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: scullyio-ng-lib.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { ComponentsModule, IdleMonitorService, ScullyContentComponent, ScullyRoutesService, TransferStateService, fromMutationObserver, isScullyGenerated, isScullyRunning };\n\n//# sourceMappingURL=scullyio-ng-lib.js.map","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Episode {\r\n  title: string;\r\n  description: string;\r\n  route: string;\r\n  number: number;\r\n  audio: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-episode-summary',\r\n  templateUrl: './episode-summary.component.html',\r\n  styleUrls: ['./episode-summary.component.css']\r\n})\r\nexport class EpisodeSummaryComponent {\r\n  @Input() episode: Episode;\r\n  @Input() showPlayer = true;\r\n\r\n  constructor(private _router: Router) {}\r\n\r\n  get preview() {\r\n    return this._router.routerState.snapshot.url !== this.episode.route;\r\n  }\r\n}\r\n","<section *ngIf=\"episode\">\r\n  <h1>\r\n    <span>Episódio #{{ episode.number }}</span>\r\n    {{ episode.title }}\r\n  </h1>\r\n  <app-player *ngIf=\"showPlayer\" [source]=\"episode.audio\" width=\"120\"></app-player>\r\n</section>\r\n\r\n<summary *ngIf=\"episode\">\r\n  {{ episode.description }}\r\n  <a *ngIf=\"preview\" [routerLink]=\"episode.route\">Descubra mais</a>\r\n</summary>\r\n","import { Injectable } from '@angular/core';\r\nimport { ScullyRoutesService, ScullyRoute } from '@scullyio/ng-lib';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Episode } from './episode-summary.component';\r\n\r\nconst dateRe = /(\\d\\d?-\\d\\d?-\\d\\d\\d\\d)/;\r\n\r\n@Injectable()\r\nexport class Episodes {\r\n  constructor(private _srs: ScullyRoutesService) {}\r\n\r\n  episodes$ = this._srs.available$.pipe(\r\n    map(routeList => {\r\n      routeList = routeList\r\n        .filter(r => dateRe.test(r.route))\r\n        .sort((a, b) => {\r\n          const adate = dateRe.exec(a.route)[0];\r\n          const bdate = dateRe.exec(b.route)[0];\r\n          return new Date(bdate).getTime() - new Date(adate).getTime();\r\n        });\r\n      return routeList\r\n        .filter((route: ScullyRoute) => route.route.startsWith(`/episode/`))\r\n        .map((e, idx) => ({ ...e, number: routeList.length - idx }));\r\n    })\r\n  ) as Observable<Episode[]>;\r\n}\r\n","import { Component, Input, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\r\n\r\nconst RADIUS = 50;\r\n\r\n@Component({\r\n  selector: 'app-player',\r\n  templateUrl: './player.component.html',\r\n  styleUrls: ['./player.component.css']\r\n})\r\nexport class PlayerComponent implements AfterViewInit {\r\n  @Input() width = 120;\r\n  @Input() source: string;\r\n\r\n  @ViewChild('audio') audio: ElementRef;\r\n  @ViewChild('progress') progress: ElementRef;\r\n\r\n  playing = false;\r\n\r\n  toggle() {\r\n    this.playing = !this.playing;\r\n    if (this.playing) {\r\n      this.audio.nativeElement.play();\r\n    } else {\r\n      this.audio.nativeElement.pause();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    const progress = this.progress.nativeElement;\r\n    const totalLength = progress.getTotalLength();\r\n    const audio = this.audio.nativeElement as HTMLAudioElement;\r\n    progress.setAttribute('stroke-dasharray', totalLength);\r\n    progress.setAttribute('stroke-dashoffset', totalLength);\r\n    audio.addEventListener('pause', () => this.playing = false);\r\n    audio.addEventListener('play', () => this.playing = true);\r\n    audio.addEventListener('timeupdate', () => {\r\n      const currentTime = audio.currentTime;\r\n      const maxduration = audio.duration;\r\n      const calc = totalLength - (currentTime / maxduration) * totalLength;\r\n\r\n      progress.setAttribute('stroke-dashoffset', calc);\r\n    });\r\n  }\r\n\r\n  seek(evnt: MouseEvent) {\r\n    const ratio = this._calculateAngle(evnt) / 360;\r\n    const audio = this.audio.nativeElement as HTMLAudioElement;\r\n    const seekTo = ratio * audio.duration;\r\n    audio.currentTime = seekTo;\r\n  }\r\n\r\n  private _calculateAngle(evnt: MouseEvent) {\r\n    const x = (RADIUS * 2) / (this.width / evnt.offsetX);\r\n    const y = (RADIUS * 2) / (this.width / evnt.offsetY);\r\n    const slope = (RADIUS - y) / (RADIUS - x);\r\n    const angle = 180 * (Math.abs(Math.atan(slope)) / Math.PI);\r\n\r\n    if (x <= RADIUS && y >= RADIUS) {\r\n      return angle;\r\n    }\r\n    if (x > RADIUS && y >= RADIUS) {\r\n      return 180 - angle;\r\n    }\r\n    if (x > RADIUS && y <= RADIUS) {\r\n      return 180 + angle;\r\n    }\r\n    return 180 + (180 - angle);\r\n  }\r\n}\r\n","<button class=\"play\" [style.width]=\"width - 40 + 'px'\" [style.height]=\"width - 40 + 'px'\" [style.border-radius]=\"width + 'px'\" (click)=\"toggle()\">\r\n  <div [class.hidden-arrow]=\"playing\" class=\"arrow\"></div>\r\n  <span [class.hidden]=\"!playing\" class=\"pause\"></span>\r\n</button>\r\n<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 100 100\" [style.width]=\"width\">\r\n  <circle cx=\"50\" cy=\"50\" r=\"32\" stroke=\"#eee\" fill=\"transparent\" stroke-width=\"2\" />\r\n\r\n  <path\r\n    (click)=\"seek($event)\"\r\n    pointer-events=\"stroke\"\r\n    d=\"\r\n    M 50 50\r\n    m -50, 0\r\n    a 50,50 0 1,0 100,0\r\n    a 50,50 0 1,0 -100,0\"\r\n    stroke-miterlimit=\"10\"\r\n    style=\"opacity: 0.4; cursor: pointer\"\r\n    fill=\"transparent\"\r\n    stroke=\"#fff\"\r\n    stroke-width=\"20\"\r\n  />\r\n\r\n  <path\r\n    #progress\r\n    d=\"\r\n    M 50 50\r\n    m -50, 0\r\n    a 50,50 0 1,0 100,0\r\n    a 50,50 0 1,0 -100,0\"\r\n    stroke-miterlimit=\"10\"\r\n    stroke=\"#fff\"\r\n    fill=\"transparent\"\r\n    stroke-width=\"20\"\r\n  />\r\n</svg>\r\n\r\n<audio preload=\"auto\" #audio>\r\n  <source type=\"audio/mp3\" [src]=\"source\" />\r\n</audio>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\n\r\nimport { EpisodeSummaryComponent } from './episode-summary.component';\r\nimport { Episodes } from './episodes';\r\nimport { PlayerComponent } from './player.component';\r\n\r\n@NgModule({\r\n  declarations: [EpisodeSummaryComponent, PlayerComponent],\r\n  exports: [EpisodeSummaryComponent],\r\n  imports: [CommonModule, RouterModule],\r\n  providers: [\r\n    {\r\n      provide: Episodes,\r\n      useClass: Episodes\r\n    }\r\n  ]\r\n})\r\nexport class SharedModule {}\r\n"],"sourceRoot":"webpack:///"}